-- Supabase E-Shop Pro Schema
-- This script sets up the entire database structure, security policies, and storage.
-- It also inserts the initial mock data to populate the site.

-- 1. Enable UUID extension (if not already enabled)
create extension if not exists "uuid-ossp";

-- 2. Create Storage Bucket for Images
-- Make sure to set this bucket to be PUBLIC in your Supabase dashboard Storage settings.
insert into storage.buckets (id, name, public)
values ('images', 'images', true)
on conflict (id) do nothing;

-- 3. Profiles Table (for public user data, linked to auth.users)
create table public.profiles (
  id uuid not null primary key references auth.users on delete cascade,
  name text,
  phone text,
  country text,
  is_admin boolean default false
);
-- Allow users to read their own profile
alter table public.profiles enable row level security;
create policy "Users can view their own profile." on public.profiles for select using (auth.uid() = id);
create policy "Users can update their own profile." on public.profiles for update using (auth.uid() = id);

-- Function to create a profile when a new user signs up
create or replace function public.handle_new_user()
returns trigger as $$
begin
  insert into public.profiles (id, name, phone, country, is_admin)
  values (new.id, new.raw_user_meta_data->>'name', new.raw_user_meta_data->>'phone', new.raw_user_meta_data->>'country', false);
  return new;
end;
$$ language plpgsql security definer;

-- Trigger to call the function on new user creation
create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user();


-- 4. Products Table
create table public.products (
  id bigint generated by default as identity primary key,
  created_at timestamptz default now(),
  name text not null,
  price numeric not null,
  sale_price numeric,
  description text,
  image_url text,
  categories text[],
  stock integer not null
);
-- Allow public read access to products
alter table public.products enable row level security;
create policy "Products are publicly viewable." on public.products for select using (true);
create policy "Admins can manage products." on public.products for all using (
  (select is_admin from public.profiles where id = auth.uid()) = true
);

-- 5. Categories Table
create table public.categories (
  id bigint generated by default as identity primary key,
  name text not null unique
);
-- Allow public read access to categories
alter table public.categories enable row level security;
create policy "Categories are publicly viewable." on public.categories for select using (true);
create policy "Admins can manage categories." on public.categories for all using (
  (select is_admin from public.profiles where id = auth.uid()) = true
);


-- 6. Promotions Table
create table public.promotions (
  id bigint generated by default as identity primary key,
  title text not null,
  description text,
  image_url text,
  is_active boolean default false,
  discount_percentage numeric,
  target_category text,
  cta_text text,
  cta_link text
);
-- Allow public read access
alter table public.promotions enable row level security;
create policy "Promotions are publicly viewable." on public.promotions for select using (true);
create policy "Admins can manage promotions." on public.promotions for all using (
  (select is_admin from public.profiles where id = auth.uid()) = true
);


-- 7. Orders & Order Items
create table public.orders (
  id bigint generated by default as identity primary key,
  created_at timestamptz default now(),
  user_id uuid not null references public.profiles,
  total numeric not null,
  status text not null default 'Processing' -- Processing, Shipped, Delivered
);
create table public.order_items (
  id bigint generated by default as identity primary key,
  order_id bigint not null references public.orders,
  product_id bigint not null references public.products,
  quantity integer not null,
  price_at_purchase numeric not null,
  status text not null default 'Processing' -- Processing, Shipped, Delivered, Cancelled
);
-- Policies for Orders and Items
alter table public.orders enable row level security;
create policy "Users can view their own orders." on public.orders for select using (auth.uid() = user_id);
create policy "Users can create orders for themselves." on public.orders for insert with check (auth.uid() = user_id);
create policy "Admins can view all orders." on public.orders for select using ((select is_admin from public.profiles where id = auth.uid()) = true);
create policy "Admins can update order status." on public.orders for update using ((select is_admin from public.profiles where id = auth.uid()) = true);

alter table public.order_items enable row level security;
create policy "Users can view items in their own orders." on public.order_items for select using (
  exists (select 1 from orders where orders.id = order_items.order_id and orders.user_id = auth.uid())
);
create policy "Users can create order items for themselves." on public.order_items for insert with check (
  exists (select 1 from orders where orders.id = order_items.order_id and orders.user_id = auth.uid())
);
create policy "Admins can view all order items." on public.order_items for select using ((select is_admin from public.profiles where id = auth.uid()) = true);
create policy "Admins can update order item status." on public.order_items for update using ((select is_admin from public.profiles where id = auth.uid()) = true);


-- 8. Wishlist Table (Junction Table)
create table public.wishlist_items (
  user_id uuid not null references public.profiles,
  product_id bigint not null references public.products,
  created_at timestamptz default now(),
  primary key (user_id, product_id)
);
-- Policies for Wishlist
alter table public.wishlist_items enable row level security;
create policy "Users can manage their own wishlist." on public.wishlist_items for all using (auth.uid() = user_id);

-- 9. Cart Table (Junction Table)
create table public.cart_items (
  user_id uuid not null references public.profiles,
  product_id bigint not null references public.products,
  quantity integer not null,
  created_at timestamptz default now(),
  primary key (user_id, product_id)
);
-- Policies for Cart
alter table public.cart_items enable row level security;
create policy "Users can manage their own cart." on public.cart_items for all using (auth.uid() = user_id);


-- 10. Reviews Table
create table public.reviews (
  id bigint generated by default as identity primary key,
  product_id bigint not null references public.products,
  user_id uuid not null references public.profiles,
  rating integer not null check (rating >= 1 and rating <= 5),
  review_text text,
  created_at timestamptz default now()
);
-- Policies for Reviews
alter table public.reviews enable row level security;
create policy "Reviews are publicly viewable." on public.reviews for select using (true);
create policy "Users can manage their own reviews." on public.reviews for all using (auth.uid() = user_id);


-- 11. Team Members Table
create table public.team_members (
  id bigint generated by default as identity primary key,
  name text,
  title text,
  image_url text
);
-- Allow public read access
alter table public.team_members enable row level security;
create policy "Team members are publicly viewable." on public.team_members for select using (true);
create policy "Admins can manage team members." on public.team_members for all using (
  (select is_admin from public.profiles where id = auth.uid()) = true
);

-- 12. Site Content Table (Single Row Table)
create table public.site_content (
  id int primary key default 1,
  site_name text,
  hero_title text,
  hero_subtitle text,
  contact_address text,
  contact_email text,
  contact_phone text,
  social_instagram text,
  social_tiktok text,
  about_title text,
  about_subtitle text,
  about_story_title text,
  about_story_content text,
  about_story_image_url text,
  about_team_title text,
  sales_banner_title text,
  sales_banner_subtitle text,
  sales_banner_end_date timestamptz,
  sales_banner_is_active boolean,
  theme_primary text,
  theme_secondary text,
  theme_accent text,
  constraint single_row_check check (id = 1)
);
-- Policies for Site Content
alter table public.site_content enable row level security;
create policy "Site content is publicly viewable." on public.site_content for select using (true);
create policy "Admins can manage site content." on public.site_content for all using (
  (select is_admin from public.profiles where id = auth.uid()) = true
);


-- 13. INSERT Initial Data
-- This data matches the original mock data to keep the site looking the same on first load.

-- Insert Categories
insert into public.categories (name) values
('Electronics'), ('Audio'), ('Furniture'), ('Smart Home'), ('Apparel'), ('Home Goods'), ('Fitness');

-- Insert Products
insert into public.products (name, price, sale_price, description, image_url, categories, stock) values
('Quantum Laptop Pro', 1850000, 1750000, 'Experience blazing-fast performance with the new Quantum Laptop Pro. Featuring a 16-inch Retina display, the latest M-series chip, and all-day battery life.', 'https://picsum.photos/seed/laptop/600/600', '{"Electronics"}', 25),
('Acoustic Bliss Headphones', 249999, null, 'Immerse yourself in pure audio with Acoustic Bliss Headphones. Noise-cancelling technology and superior comfort for an unparalleled listening experience.', 'https://picsum.photos/seed/headphones/600/600', '{"Audio"}', 50),
('ErgoComfort Office Chair', 399000, null, 'Support your posture with the ErgoComfort Office Chair. Fully adjustable with lumbar support, breathable mesh, and a sleek, modern design.', 'https://picsum.photos/seed/chair/600/600', '{"Furniture"}', 15),
('SmartHome Hub+', 129500, 110000, 'Control your entire home with the SmartHome Hub+. Compatible with all major smart devices, featuring voice control and customizable routines.', 'https://picsum.photos/seed/smarthome/600/600', '{"Smart Home"}', 75),
('Velocity Running Shoes', 179999, null, 'Achieve your personal best with Velocity Running Shoes. Lightweight, responsive cushioning and a durable outsole for any terrain.', 'https://picsum.photos/seed/shoes/600/600', '{"Apparel"}', 120),
('Gourmet Coffee Brewer', 89999, null, 'Brew the perfect cup every time with the Gourmet Coffee Brewer. Programmable settings and a sleek stainless steel design for your kitchen.', 'https://picsum.photos/seed/coffee/600/600', '{"Home Goods"}', 40),
('Astro Gaming Headset', 199999, 179999, 'Crystal clear audio for competitive gaming. 7.1 surround sound and a pro-grade microphone.', 'https://picsum.photos/seed/astro/600/600', '{"Audio"}', 35),
('Zen Garden Desk Set', 45000, null, 'Bring tranquility to your workspace with this miniature zen garden kit. Includes sand, rake, and stones.', 'https://picsum.photos/seed/zen/600/600', '{"Home Goods"}', 80),
('Pro-Grip Dumbbell Set', 150000, null, 'Adjustable dumbbell set for a full-body workout at home. From 5kg to 25kg.', 'https://picsum.photos/seed/dumbbell/600/600', '{"Fitness"}', 20),
('Solar Power Bank', 65000, null, 'Charge your devices on the go with this high-capacity solar-powered power bank. Rugged and waterproof.', 'https://picsum.photos/seed/solar/600/600', '{"Electronics"}', 90),
('Leather Weekend Bag', 220000, null, 'Travel in style with this genuine leather weekend bag. Spacious, durable, and timeless design.', 'https://picsum.photos/seed/bag/600/600', '{"Apparel"}', 30),
('Smart Water Bottle', 35000, null, 'Tracks your water intake and glows to remind you to stay hydrated throughout the day. Connects to your phone.', 'https://picsum.photos/seed/bottle/600/600', '{"Smart Home"}', 60),
('Nordic Throw Blanket', 75000, 65000, 'Cozy up with this soft, woven throw blanket. Perfect for a chic and comfortable living room accent.', 'https://picsum.photos/seed/blanket/600/600', '{"Home Goods"}', 55);

-- Insert Promotions
insert into public.promotions (title, description, image_url, is_active, discount_percentage, target_category, cta_text, cta_link) values
('Black Friday Madness', 'Unbeatable deals on all electronics. Get up to 25% off now!', 'https://picsum.photos/seed/promo1/1200/400', false, 25, 'Electronics', 'Shop Electronics', '/shop'),
('Summer Fashion Sale', 'Refresh your wardrobe with our new summer collection. Prices you''ll love.', 'https://picsum.photos/seed/promo2/1200/400', true, 20, 'Apparel', 'Explore Apparel', '/shop');

-- Insert Team Members
insert into public.team_members (name, title, image_url) values
('Jane Doe', 'Founder & CEO', 'https://picsum.photos/seed/ceo/200/200'),
('John Smith', 'Chief Technology Officer', 'https://picsum.photos/seed/cto/200/200'),
('Emily White', 'Chief Marketing Officer', 'https://picsum.photos/seed/cmo/200/200');

-- Insert Site Content
insert into public.site_content (
  id, site_name, hero_title, hero_subtitle,
  contact_address, contact_email, contact_phone,
  social_instagram, social_tiktok,
  about_title, about_subtitle, about_story_title, about_story_content, about_story_image_url, about_team_title,
  sales_banner_title, sales_banner_subtitle, sales_banner_end_date, sales_banner_is_active,
  theme_primary, theme_secondary, theme_accent
) values (
  1, 'E-Shop Pro', 'Discover Our New Collection', 'Shop the latest trends and find your perfect style.',
  '123 Quantum Plaza, Tech City, 98765', 'support@eshopro.com', '(555) 123-4567',
  'EShopPro', '@eshopro.official',
  'About E-Shop Pro', 'We believe in quality, innovation, and customer satisfaction. E-Shop Pro was founded to bring you the latest and greatest products with a seamless shopping experience.',
  'Our Story', 'Founded in a small garage with a big dream, E-Shop Pro started with a simple idea: to make high-quality products accessible to everyone. We''ve grown since then, but our core values remain the same. We meticulously source and curate our collection, ensuring that every item we sell meets our high standards of quality and design.',
  'https://picsum.photos/seed/store/600/400', 'Meet the Team',
  'Up to 40% Off Wigs', 'Free Shipping Over ₦50,000', (now() + interval '3 days'), true,
  '#1a237e', '#ffab40', '#f50057'
);

-- Note: User data is handled by Supabase Auth. You will need to create users through the sign-up form.
-- To create an admin user:
-- 1. Sign up a new user through the app's sign-up form.
-- 2. Go to the 'profiles' table in your Supabase Table Editor.
-- 3. Find the new user's row and set the 'is_admin' column to TRUE.
--
-- This user can then log in with 'admin@example.com' / 'admin123' (or whatever you signed up with)
-- and access the admin panel, as long as you update the `is_admin` flag.
